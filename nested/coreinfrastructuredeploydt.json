{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"metadata": {
				"description": "Datacenter Region Location"
			}
		},
		"apiVersionStorage": {
			"type": "string",
			"metadata": {
				"description": "Storage API version"
			}
		},
		"apiVersionNetwork": {
			"type": "string",
			"metadata": {
				"description": "Network API version"
			}
		},
		"apiVersionCompute": {
			"type": "string",
			"metadata": {
				"description": "Compute API version"
			}
		},
		"coreInfraDiagStorageAccountArray": {
			"type": "array",
			"metadata": {
				"description": "Diagnostics storage account names"
			}
		},
		"newStorageAccountWeb": {
			"type": "string",
			"metadata": {
				"description": "Web storage account name for custom image"
			}
		},
		"newStorageAccountRegistry": {
			"type": "string",
			"metadata": {
				"description": "Storage account name for use by OpenShift registry"
			}
		},
		"openshiftClusterPrefix": {
			"type": "string",
			"metadata": {
				"description": "OpenShift cluster prefix"
			}
		},
		"simplifiedClusterPrefix": {
			"type": "string",
			"metadata": {
				"description": "Simplified cluster prefix with no hyphens and all lowercase"
			}
		},
		"openshiftBastionHostname": {
			"type": "string",
			"metadata": {
				"description": "Bastion hostname"
			}
		},
		"openshiftMasterHostname": {
			"type": "string",
			"metadata": {
				"description": "Master hostname"
			}
		},
		"openshiftInfraHostname": {
			"type": "string",
			"metadata": {
				"description": "Infra hostname"
			}
		},
		"openshiftCnsHostname": {
			"type": "string",
			"metadata": {
				"description": "CNS hostname"
			}
		},
		"availabilitySetArray": {
			"type": "array",
			"metadata": {
				"description": "Availability set array"
			}
		},
		"masterFirstAddrOctet4": {
			"type": "int",
			"metadata": {
				"description": "First IP address for master nodes"
			}
		},
		"masterFirstAddrPrefix": {
			"type": "string",
			"metadata": {
				"description": "Master prefix for first IP address"
			}
		},
		"infraFirstAddrOctet4": {
			"type": "int",
			"metadata": {
				"description": "First IP address for infra nodes"
			}
		},
		"infraFirstAddrPrefix": {
			"type": "string",
			"metadata": {
				"description": "Infra prefix for first IP address"
			}
		},
		"cnsFirstAddrOctet4": {
			"type": "int",
			"metadata": {
				"description": "First IP address for cns nodes"
			}
		},
		"cnsFirstAddrPrefix": {
			"type": "string",
			"metadata": {
				"description": "CNS prefix for first IP address"
			}
		},
		"masterClusterType": {
			"type": "string",
			"metadata": {
				"description": "Master cluster type - private or public"
			}
		},
		"routerClusterType": {
			"type": "string",
			"metadata": {
				"description": "Routing cluster type - private or public"
			}
		},
		"masterLoadBalancerName": {
			"type": "string",
			"metadata": {
				"description": "Master load balancer name"
			}
		},
		"openshiftMasterPublicIpDnsLabel": {
			"type": "string",
			"metadata": {
				"description": "Master public IP DNS label"
			}
		},
		"masterFrontEndIpConfigurationProperties": {
			"type": "object",
			"metadata": {
				"description": "Master load balancer front end IP configuration properties"
			}
		},
		"masterLbFrontEndConfigId": {
			"type": "string",
			"metadata": {
				"description": "Master load balancer front end config ID"
			}
		},
		"masterLbBackendPoolId": {
			"type": "string",
			"metadata": {
				"description": "Master load balancer back end pool ID"
			}
		},
		"masterLbHttpsProbeId": {
			"type": "string",
			"metadata": {
				"description": "Master load balancer HTTPS probe ID"
			}
		},
		"infraLoadBalancerName": {
			"type": "string",
			"metadata": {
				"description": "Infra load balancer name"
			}
		},
		"infraLbPublicIpDnsLabel": {
			"type": "string",
			"metadata": {
				"description": "Infra public IP DNS label"
			}
		},
		"infraFrontEndIpConfigurationProperties": {
			"type": "object",
			"metadata": {
				"description": "Infra load balancer front end IP configuration properties"
			}
		},
		"infraLbFrontEndConfigId": {
			"type": "string",
			"metadata": {
				"description": "Infra load balancer front end config ID"
			}
		},
		"infraLbBackendPoolId": {
			"type": "string",
			"metadata": {
				"description": "Infra load balancer back end pool ID"
			}
		},
		"infraLbHttpProbeId": {
			"type": "string",
			"metadata": {
				"description": "Infra load balancer HTTP probe ID"
			}
		},
		"infraLbHttpsProbeId": {
			"type": "string",
			"metadata": {
				"description": "Infra load balancer HTTPS probe ID"
			}
		},
		"bastionIp": {
			"type": "string",
			"metadata": {
				"description": "Bastion private IP"
			}
		},
		"bastionPublicIp": {
			"type": "string",
			"metadata": {
				"description": "Bastion public IP"
			}
		},
		"bastionPublicIpDnsLabel": {
			"type": "string",
			"metadata": {
				"description": "Bastion public IP DNS label"
			}
		},
		"enableBastionAcceleratedNetworking": {
			"type": "string",
			"metadata": {
				"description": "Enable accelerated networking for bastion node"
			}
		},
		"enableMasterAcceleratedNetworking": {
			"type": "string",
			"metadata": {
				"description": "Enable accelerated networking for master nodes"
			}
		},
		"enableInfraAcceleratedNetworking": {
			"type": "string",
			"metadata": {
				"description": "Enable accelerated networking for infra nodes"
			}
		},
		"enableCnsAcceleratedNetworking": {
			"type": "string",
			"metadata": {
				"description": "Enable accelerated networking for cns nodes"
			}
		},
		"existingMasterSubnetReference": {
			"type": "string",
			"metadata": {
				"description": "Full reference for existing master subnet"
			}
		},
		"existingInfraSubnetReference": {
			"type": "string",
			"metadata": {
				"description": "Full reference for existing infra subnet"
			}
		},
		"existingCnsSubnetReference": {
			"type": "string",
			"metadata": {
				"description": "Full reference for existing cns subnet"
			}
		},
		"masterInstanceCount": {
			"type": "int",
			"metadata": {
				"description": "Master count"
			}
		},
		"infraInstanceCount": {
			"type": "int",
			"metadata": {
				"description": "Infra count"
			}
		},
		"cnsInstanceCount": {
			"type": "int",
			"metadata": {
				"description": "CNS count"
			}
		},
		"customTags": {
			"type": "object",
			"metadata": {
				"description": "Custom Tags"
			}
		}
	},
	"variables": {
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('coreInfraDiagStorageAccountArray')[copyIndex()].name]",
			"location": "[parameters('location')]",
			"kind": "Storage",
			"apiVersion": "[parameters('apiVersionStorage')]",
			"tags": "[parameters('customTags')]",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"copy": {
				"name": "storageAccountLoop",
				"count": "[length(parameters('coreInfraDiagStorageAccountArray'))]"
			}
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('newStorageAccountRegistry')]",
			"location": "[parameters('location')]",
			"kind": "Storage",
			"apiVersion": "[parameters('apiVersionStorage')]",
			"tags": "[parameters('customTags')]",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			}
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('newStorageAccountWeb')]",
			"location": "[parameters('location')]",
			"kind": "StorageV2",
			"apiVersion": "[parameters('apiVersionStorage')]",
			"tags": "[parameters('customTags')]",
			"sku": {
				"name": "Standard_RAGRS",
				"tier": "Standard"
			}
		}, {
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(parameters('openshiftClusterPrefix'), '-Nsg-Oscm-11')]",
			"location": "[parameters('location')]",
			"tags": "[parameters('customTags')]",
			"properties": {
				"securityRules": [{
					"name": "allowSSHin_all",
					"properties": {
						"description": "Allow SSH in from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "22",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				}, {
					"name": "allowHTTPS_all",
					"properties": {
						"description": "Allow HTTPS connections from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "443",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 200,
						"direction": "Inbound"
					}
				}]
			}
		}, {
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(parameters('openshiftClusterPrefix'), '-Nsg-Osci-11')]",
			"location": "[parameters('location')]",
			"tags": "[parameters('customTags')]",
			"properties": {
				"securityRules": [{
					"name": "allowSSHin_all",
					"properties": {
						"description": "Allow SSH in from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "22",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				}, {
					"name": "allowHTTPSIn_all",
					"properties": {
						"description": "Allow HTTPS connections from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "443",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 200,
						"direction": "Inbound"
					}
				}, {
					"name": "allowHTTPIn_all",
					"properties": {
						"description": "Allow HTTP connections from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "80",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 300,
						"direction": "Inbound"
					}
				}]
			}
		}, {
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(parameters('openshiftClusterPrefix'), '-Nsg-Oscc-11')]",
			"location": "[parameters('location')]",
			"tags": "[parameters('customTags')]",
			"properties": {
				"securityRules": [{
					"name": "allowSSHin_all",
					"properties": {
						"description": "Allow SSH in from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "22",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				}]
			}
		}, {
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[parameters('availabilitySetArray')[copyIndex()].name]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionCompute')]",
			"sku": {
				"name": "Aligned"
			},
			"properties": {
				"platformFaultDomainCount": "2",
				"platformUpdateDomainCount": "5"
			},
			"tags": "[parameters('customTags')]",
			"copy": {
				"name": "availabiltySetLoop",
				"count": "[length(parameters('availabilitySetArray'))]"
			}
		}, {
			"type": "Microsoft.Network/loadBalancers",
			"name": "[parameters('masterLoadBalancerName')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"dependsOn": [
				"[if(equals(parameters('masterClusterType'), 'public'), concat('Microsoft.Network/publicIPAddresses/', parameters('openshiftMasterPublicIpDnsLabel')), 'availabiltySetLoop')]"
			],
			"properties": {
				"frontendIPConfigurations": [{
					"name": "LoadBalancerFrontEnd",
					"properties": "[parameters('masterFrontEndIpConfigurationProperties')]"
				}],
				"backendAddressPools": [{
					"name": "loadBalancerBackEnd"
				}],
				"loadBalancingRules": [{
					"name": "OpenShiftAdminConsole",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[parameters('masterLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[parameters('masterLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"loadDistribution": "SourceIP",
						"idleTimeoutInMinutes": 30,
						"frontendPort": 443,
						"backendPort": 443,
						"probe": {
							"id": "[parameters('masterLbHttpsProbeId')]"
						}
					}
				}],
				"probes": [{
					"name": "httpsProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 443,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}]
			}
		}, {
			"type": "Microsoft.Network/loadBalancers",
			"name": "[parameters('infraLoadBalancerName')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"dependsOn": [
				"[if(equals(parameters('routerClusterType'), 'public'), concat('Microsoft.Network/publicIPAddresses/', parameters('infraLbPublicIpDnsLabel')), 'availabiltySetLoop')]"
			],
			"properties": {
				"frontendIPConfigurations": [{
					"name": "LoadBalancerFrontEnd",
					"properties": "[parameters('infraFrontEndIpConfigurationProperties')]"
				}],
				"backendAddressPools": [{
					"name": "loadBalancerBackEnd"
				}],
				"loadBalancingRules": [{
					"name": "OpenShiftRouterHTTP",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[parameters('infraLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[parameters('infraLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 80,
						"backendPort": 80,
						"probe": {
							"id": "[parameters('infraLbHttpProbeId')]"
						}
					}
				}, {
					"name": "OpenShiftRouterHTTPS",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[parameters('infraLbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[parameters('infraLbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 443,
						"backendPort": 443,
						"probe": {
							"id": "[parameters('infraLbHttpsProbeId')]"
						}
					}
				}],
				"probes": [{
					"name": "httpProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 80,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}, {
					"name": "httpsProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 443,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}]
			}
		}, {
			"condition": "[equals(parameters('routerClusterType'), 'public')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('bastionPublicIp')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic",
				"dnsSettings": {
					"domainNameLabel": "[parameters('bastionPublicIpDnsLabel')]"
				}
			}
		}, {
			"condition": "[equals(parameters('routerClusterType'), 'public')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('infraLbPublicIpDnsLabel')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[parameters('infraLbPublicIpDnsLabel')]"
				}
			}
		}, {
			"condition": "[equals(parameters('masterClusterType'), 'public')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('openshiftMasterPublicIpDnsLabel')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[parameters('openshiftMasterPublicIpDnsLabel')]"
				}
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(parameters('openshiftBastionHostname'), '-nic-01')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"dependsOn": [
				"[if(equals(parameters('routerClusterType'), 'public'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/publicIPAddresses/', parameters('bastionPublicIp')), 'availabiltySetLoop')]",
				"[concat('Microsoft.Network/networkSecurityGroups/', parameters('openshiftClusterPrefix'), '-Nsg-Oscm-01')]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(parameters('openshiftBastionHostname'), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[parameters('bastionIp')]",
						"subnet": {
							"id": "[parameters('existingMasterSubnetReference')]"
						}
					}
				}],
				"enableAcceleratedNetworking": "[parameters('enableBastionAcceleratedNetworking')]",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('openshiftClusterPrefix'), '-Nsg-Oscm-01'))]"
				}
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(parameters('openshiftMasterHostname'), padLeft(add(copyindex(), 1), 2, '1'), '-nic-01')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/', parameters('masterLoadBalancerName'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', parameters('openshiftClusterPrefix'), '-Nsg-Oscm-01')]"
			],
			"copy": {
				"name": "masterNicLoop",
				"count": "[parameters('masterInstanceCount')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(parameters('openshiftMasterHostname'), padLeft(add(copyindex(), 1), 2, '1'), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[concat(parameters('masterFirstAddrPrefix'), copyindex(parameters('masterFirstAddrOctet4')))]",
						"subnet": {
							"id": "[parameters('existingMasterSubnetReference')]"
						},
						"loadBalancerBackendAddressPools": [{
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('masterLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
						}]
					}
				}],
				"enableAcceleratedNetworking": "[parameters('enableMasterAcceleratedNetworking')]",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('openshiftClusterPrefix'), '-Nsg-Oscm-01'))]"
				}
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(parameters('openshiftInfraHostname'), padLeft(add(copyindex(), 1), 2, '1'), '-nic-01')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"dependsOn": [
				"[concat('Microsoft.Network/loadBalancers/', parameters('infraLoadBalancerName'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', parameters('openshiftClusterPrefix'), '-Nsg-Osci-01')]"
			],
			"copy": {
				"name": "infraNicLoop",
				"count": "[parameters('infraInstanceCount')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(parameters('openshiftInfraHostname'), padLeft(add(copyindex(), 1), 2, '1'), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[concat(parameters('infraFirstAddrPrefix'), copyindex(parameters('infraFirstAddrOctet4')))]",
						"subnet": {
							"id": "[parameters('existingInfraSubnetReference')]"
						},
						"loadBalancerBackendAddressPools": [{
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('infraLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
						}]
					}
				}],
				"enableAcceleratedNetworking": "[parameters('enableInfraAcceleratedNetworking')]",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('openshiftClusterPrefix'), '-Nsg-Osci-01'))]"
				}
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(parameters('openshiftCnsHostname'), padLeft(add(copyindex(), 1), 2, '1'), '-nic-01')]",
			"location": "[parameters('location')]",
			"apiVersion": "[parameters('apiVersionNetwork')]",
			"tags": "[parameters('customTags')]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkSecurityGroups/', parameters('openshiftClusterPrefix'), '-Nsg-Oscc-01')]"
			],
			"copy": {
				"name": "cnsNicLoop",
				"count": "[parameters('cnsInstanceCount')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(parameters('openshiftCnsHostname'), padLeft(add(copyindex(), 1), 2, '1'), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[concat(parameters('cnsFirstAddrPrefix'), copyindex(parameters('cnsFirstAddrOctet4')))]",
						"subnet": {
							"id": "[parameters('existingCnsSubnetReference')]"
						}
					}
				}],
				"enableAcceleratedNetworking": "[parameters('enableCnsAcceleratedNetworking')]",
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(parameters('openshiftClusterPrefix'), '-Nsg-Oscc-01'))]"
				}
			}
		}
	],
	"outputs": {
		"storageUriMaster": {
			"type": "string",
			"value": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('coreInfraDiagStorageAccountArray')[0].name), parameters('apiVersionStorage')).primaryEndpoints['blob']))]"
		},"storageUriInfra": {
			"type": "string",
			"value": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('coreInfraDiagStorageAccountArray')[1].name), parameters('apiVersionStorage')).primaryEndpoints['blob']))]"
		},"storageUriCns": {
			"type": "string",
			"value": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('coreInfraDiagStorageAccountArray')[2].name), parameters('apiVersionStorage')).primaryEndpoints['blob']))]"
		},
		"registryKey": {
			"type": "string",
			"value": "[listKeys(parameters('newStorageAccountRegistry'), parameters('apiVersionStorage')).keys[0].value]"
		},
		"masterPublicIp": {
			"type": "string",
			"value": "[if(equals(parameters('masterClusterType'), 'public'), reference(parameters('openshiftMasterPublicIpDnsLabel')).ipAddress, 'private')]"
		},
		"masterPublicIpFqdn": {
			"type": "string",
			"value": "[if(equals(parameters('masterClusterType'), 'public'), reference(parameters('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn, 'private')]"
		},
		"infraPublicIp": {
			"type": "string",
			"value": "[if(equals(parameters('routerClusterType'), 'public'), reference(parameters('infraLbPublicIpDnsLabel')).ipAddress, 'private')]"
		}
	}
}
